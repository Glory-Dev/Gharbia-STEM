{"version":3,"sources":["sass/helpers/_theme.scss","main.css","sass/helpers/_rtl.scss","sass/helpers/_variables.scss","sass/layout/_global-rules.scss","sass/layout/_grid.scss","sass/helpers/_mixins.scss","style.css"],"names":[],"mappings":"AACA;EACE,gBAAA;EACA,mBAAA;ACAF;;ADEA;EACE,gBAAA;EACA,mBAAA;ACCF;;ACPE;EACE,8BAAA;EAAA,8BAAA;MAAA,+BAAA;UAAA,2BAAA;ADUJ;ACRE;EACE,gCCmBI;AFTR;;AGdA;EACE,uBAAA;AHiBF;AGfE;EACE,aAAA;AHiBJ;AGfE;EACE,kCDeM;AFEV;AGfE;EACE,cAAA;EACA,qBAAA;AHiBJ;AGfE;EACE,SAAA;EACA,UAAA;EACA,gBAAA;AHiBJ;AGfE;EACE,WAAA;EACA,YAAA;AHiBJ;AGfE;EACE,YAAA;EACA,eAAA;EACA,6BAAA;AHiBJ;;AI3CA;EACE,8BAAA;UAAA,sBAAA;AJ8CF;;AI5CA;EACE,kBAAA;EAEE,kBAAA;EACA,mBAAA;EAGA,iBAAA;EACA,kBAAA;AJ4CJ;AKzCI;EDXJ;IAWI,YAAA;EJ6CF;AACF;AKzCI;EDhBJ;IAcI,YAAA;EJ+CF;AACF;AKzCI;EDrBJ;IAiBI,aAAA;EJiDF;AACF;AMtEA;EACE,4DAAA;AACF","file":"main.css","sourcesContent":["// Colors\r\n:root {\r\n  --main-bg: white;\r\n  --main-color: black;\r\n}\r\nhtml[dark=\"true\"] {\r\n  --main-bg: black;\r\n  --main-color: white;\r\n}\r\n",":root {\n  --main-bg: white;\n  --main-color: black;\n}\n\nhtml[dark=true] {\n  --main-bg: black;\n  --main-color: white;\n}\n\nhtml[lang=ar] * {\n  flex-direction: row-reverse;\n}\nhtml[lang=ar] body {\n  font-family: \"Cairo\", sans-serif;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\nhtml * {\n  outline: none;\n}\nhtml body {\n  font-family: \"Poppins\", sans-serif;\n}\nhtml a {\n  color: inherit;\n  text-decoration: none;\n}\nhtml ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\nhtml img {\n  width: 100%;\n  height: 100%;\n}\nhtml button {\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n.container {\n  position: relative;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n}\n@media (min-width: 768px) and (max-width: 991.98px) {\n  .container {\n    width: 750px;\n  }\n}\n@media (min-width: 992px) and (max-width: 1199.98px) {\n  .container {\n    width: 970px;\n  }\n}\n@media (min-width: 1200px) {\n  .container {\n    width: 1170px;\n  }\n}","html[lang=\"ar\"] {\r\n  * {\r\n    flex-direction: row-reverse;\r\n  }\r\n  body {\r\n    font-family: $Cairo;\r\n  }\r\n}\r\n","// Global\r\n$duration: 0.3s;\r\n\r\n// Media Queries\r\n$min-mobile: \"576px\";\r\n$mobile: \"575.98px\";\r\n$min-small: \"768px\";\r\n$max-small: \"767.98px\";\r\n$min-medium: \"992px\";\r\n$max-medium: \"991.98px\";\r\n$desktop: \"1200px\";\r\n$max-desktop: \"1199.98px\";\r\n\r\n// Z-Index\r\n$zindex-dropdown: 1000 !default;\r\n$zindex-sticky: 1020 !default;\r\n$zindex-fixed: 1030 !default;\r\n$zindex-modal-backdrop: 1040 !default;\r\n$zindex-modal: 1050 !default;\r\n$zindex-popover: 1060 !default;\r\n$zindex-tooltip: 1070 !default;\r\n\r\n// Fonts\r\n$Poppins: \"Poppins\", sans-serif;\r\n$Cairo: \"Cairo\", sans-serif;\r\n$Gugi: \"Gugi\", cursive;\r\n$Major: \"Major Mono Display\", monospace;\r\n\r\n// Colors\r\n\r\n// Materials\r\n$mats-colors-red: #f44336;\r\n$mats-colors-pink: #e91e63;\r\n$mats-colors-purple: #9c27b0;\r\n$mats-colors-dark-purple: #673ab7;\r\n$mats-colors-light-purple: #3f51b5;\r\n$mats-colors-dark-blue: #2196f3;\r\n$mats-colors-blue: #03a9f4;\r\n$mats-colors-light-blue: #00bcd4;\r\n$mats-colors-darl-green: #009688;\r\n$mats-colors-green: #4caf50;\r\n$mats-colors-light-green: #8bc34a;\r\n$mats-colors-green-fes: #cddc39;\r\n$mats-colors-yellow: #ffeb3b;\r\n$mats-colors-dark-yellow: #ffc107;\r\n$mats-colors-orange: #ff9800;\r\n$mats-colors-dark-orange: #ff5722;\r\n$mats-colors-brown: #795548;\r\n$mats-colors-gray: #9e9e9e;\r\n$mats-colors-idk: #607d8b;\r\n\r\n// Social\r\n$github: black;\r\n$youtube: #f20000;\r\n$discord: #6c82cf;\r\n$twitter: #28a0d5;\r\n$facebook: #1771e6;\r\n$linkedIn: #0077b5;\r\n","// Some Roles\r\nhtml {\r\n  scroll-behavior: smooth;\r\n\r\n  * {\r\n    outline: none;\r\n  }\r\n  body {\r\n    font-family: $Poppins;\r\n  }\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  button {\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n  }\r\n}","* {\r\n  box-sizing: border-box;\r\n}\r\n.container {\r\n  position: relative;\r\n  padding: {\r\n    left: 15px;\r\n    right: 15px;\r\n  }\r\n  margin: {\r\n    left: auto;\r\n    right: auto;\r\n  }\r\n  @include media(medium) {\r\n    width: 750px;\r\n  }\r\n  @include media(desktops) {\r\n    width: 970px;\r\n  }\r\n  @include media(large-desktops) {\r\n    width: 1170px;\r\n  }\r\n}\r\n","// Media\r\n@mixin media($points) {\r\n  @if $points == mobile {\r\n    // Extra small devices (portrait phones, less than 576px)\r\n    @media (max-width: $mobile) {\r\n      @content;\r\n    }\r\n  } @else if $points == small {\r\n    // Small devices (landscape phones, 576px and up)\r\n    @media (min-width: $min-mobile) and (max-width: $max-small) {\r\n      @content;\r\n    }\r\n  } @else if $points == medium {\r\n    // Medium devices (tablets, 768px and up)\r\n    @media (min-width: $min-small) and (max-width: $max-medium) {\r\n      @content;\r\n    }\r\n  } @else if $points == desktops {\r\n    // Large devices (desktops, 992px and up)\r\n    @media (min-width: $min-medium) and (max-width: $max-desktop) {\r\n      @content;\r\n    }\r\n  } @else if $points == large-desktops {\r\n    // Extra large devices (large desktops, 1200px and up)\r\n    @media (min-width: $desktop) {\r\n      @content;\r\n    }\r\n  } @else if $points == min-mobile {\r\n    @media (min-width: $min-mobile) {\r\n      @content;\r\n    }\r\n  } @else if $points == min-small {\r\n    @media (min-width: $min-small) {\r\n      @content;\r\n    }\r\n  } @else if $points == max-small {\r\n    @media (min-width: $max-small) {\r\n      @content;\r\n    }\r\n  } @else if $points == min-medium {\r\n    @media (min-width: $min-medium) {\r\n      @content;\r\n    }\r\n  } @else if $points == max-medium {\r\n    @media (min-width: $max-medium) {\r\n      @content;\r\n    }\r\n  } @else if $points == max-desktop {\r\n    @media (min-width: $max-desktop) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @error \"Media is unknown\";\r\n  }\r\n}\r\n\r\n// Animation\r\n@mixin animation(\r\n  $name,\r\n  $duration: 0s,\r\n  $timing-function: ease,\r\n  $iteration-count: 1,\r\n  $fill-mode: normal,\r\n  $delay: 0s\r\n) {\r\n  animation: $name $duration $timing-function $iteration-count $fill-mode $delay;\r\n  // Animation KeyFrames\r\n  @keyframes #{$name} {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Pesudo Elements\r\n\r\n// Center\r\n@mixin center($direction: both, $type: flex) {\r\n  @if $direction == horizontal {\r\n    @if $type == \"flex\" {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    @if $type == \"position-transform\" {\r\n      position: absolute;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n  }\r\n  @if $direction == vertical {\r\n    @if $type == \"flex\" {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    @if $type == \"position-transform\" {\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n  }\r\n  @if $direction == both {\r\n    @if $type == \"flex\" {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    @if $type == \"position-transform\" {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n}\r\n\r\n// Calc\r\n@mixin calc($property, $expression) {\r\n  #{$property}: calc(#{$expression});\r\n}\r\n\r\n// Arrow\r\n@mixin arrow($position: top, $size: 10px, $color: black) {\r\n  // Revert $position if needed\r\n  $direction: top !default;\r\n  @if $position == top {\r\n    $direction: bottom;\r\n  } @else if $position == bottom {\r\n    $direction: top;\r\n  } @else if $position == left {\r\n    $direction: right;\r\n  } @else if $position == right {\r\n    $direction: left;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    #{$position}: -$size * 2;\r\n    @if $position == \"top\" or $position == \"bottom\" {\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    } @else if $position == \"left\" or $position == \"right\" {\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n    border: $size solid transparent {\r\n      #{$direction + \"-color\"}: $color;\r\n    }\r\n  }\r\n}\r\n\r\n// Overlay\r\n@mixin overlay($color, $alpha) {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n  background-color: rgba($color, $alpha);\r\n}\r\n\r\n// Prefixer\r\n@mixin prefixer($prop, $value, $prefixes: ()) {\r\n  @each $prefixe in $prefixes {\r\n    #{\"-\" + $prefixe + \"-\" + $prop}: $value;\r\n  }\r\n  #{$prop}: $value;\r\n}\r\n","body {\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}"]}